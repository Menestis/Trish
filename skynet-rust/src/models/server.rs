/*
 * Skynet API
 *
 * This is the skynet infrastructure api
 *
 * The version of the OpenAPI document: 0.1
 * Contact: contact@guillaume-etheve.fr
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Server {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "ip")]
    pub ip: String,
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(rename = "kind")]
    pub kind: String,
    #[serde(rename = "label")]
    pub label: String,
    #[serde(rename = "state")]
    pub state: State,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "online")]
    pub online: i32,
}

impl Server {
    pub fn new(id: String, description: String, ip: String, kind: String, label: String, state: State, online: i32) -> Server {
        Server {
            id,
            description,
            ip,
            key: None,
            kind,
            label,
            state,
            properties: None,
            online,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "Idle")]
    Idle,
    #[serde(rename = "Waiting")]
    Waiting,
    #[serde(rename = "Starting")]
    Starting,
    #[serde(rename = "Started")]
    Started,
    #[serde(rename = "Playing")]
    Playing,
}

impl Default for State {
    fn default() -> State {
        Self::Idle
    }
}

